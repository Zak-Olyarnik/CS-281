$date
  Tue Dec  1 16:14:48 2015
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 1 ! s_regdst $end
$var reg 1 " s_alusrc $end
$var reg 1 # s_memtoreg $end
$var reg 1 $ s_regwrite $end
$var reg 1 % s_memread $end
$var reg 1 & s_memwrite $end
$var reg 1 ' s_branch $end
$var reg 2 ( s_aluop[1:0] $end
$var reg 3 ) s_alucontrol[2:0] $end
$var reg 6 * s_opcode[5:0] $end
$var reg 6 + s_funct[5:0] $end
$scope module test_cont $end
$var reg 6 , opcode[5:0] $end
$var reg 6 - funct[5:0] $end
$var reg 1 . regdst $end
$var reg 1 / alusrc $end
$var reg 1 0 memtoreg $end
$var reg 1 1 regwrite $end
$var reg 1 2 memread $end
$var reg 1 3 memwrite $end
$var reg 1 4 branch $end
$var reg 2 5 aluop[1:0] $end
$var reg 3 6 alucontrol[2:0] $end
$var reg 1 7 r_format $end
$var reg 1 8 lw $end
$var reg 1 9 sw $end
$var reg 1 : beq $end
$var reg 2 ; op[1:0] $end
$upscope $end
$enddefinitions $end
#0
0!
0"
0#
0$
0%
0&
0'
b00 (
b010 )
bUUUUUU *
bUUUUUU +
bUUUUUU ,
bUUUUUU -
0.
0/
00
01
02
03
04
b00 5
b010 6
07
08
09
0:
b00 ;
#5000000
1!
1$
b10 (
b000000 *
b100000 +
b000000 ,
b100000 -
1.
11
b10 5
17
b10 ;
#25000000
0!
1"
1#
1%
b00 (
b100011 *
b000000 +
b100011 ,
b000000 -
0.
1/
10
12
b00 5
07
18
b00 ;
#45000000
0#
0$
0%
1&
b101011 *
b101011 ,
00
01
02
13
08
19
#65000000
1!
0"
1$
0&
b10 (
b000 )
b000000 *
b100100 +
b000000 ,
b100100 -
1.
0/
11
03
b10 5
b000 6
17
09
b10 ;
#85000000
b001 )
b100101 +
b100101 -
b001 6
#105000000
b111 )
b101010 +
b101010 -
b111 6
#125000000
b000000 +
b000000 -
